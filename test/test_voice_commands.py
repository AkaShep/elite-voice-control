import logging
from src import SpeechRecognizer
from src import TtsEngine
from voice_commands.command_loader import CommandLoader
from voice_commands import VoiceCommandProcessor

def main():
    logging.basicConfig(level=logging.INFO)

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–∞–Ω–¥
    loader = CommandLoader("voice_commands/categories")
    loader.load()
    commands = loader.get_all_commands()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    tts = TtsEngine()
    recognizer = SpeechRecognizer()
    processor = VoiceCommandProcessor(tts, commands)

    print("–ì–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)...")

    import sounddevice as sd
    import numpy as np

    duration = 3  # —Å–µ–∫—É–Ω–¥—ã

    try:
        while True:
            print("üé§ –ó–∞–ø–∏—Å—å...")
            audio = sd.rec(int(duration * 16000), samplerate=16000, channels=1, dtype='int16')
            sd.wait()
            audio_bytes = audio.tobytes()

            text = recognizer.recognize(audio_bytes)
            print(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")

            if not processor.handle_command(text):
                tts.synthesize("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.")
    except KeyboardInterrupt:
        print("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–æ.")

if __name__ == "__main__":
    main()
